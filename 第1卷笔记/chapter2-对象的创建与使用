分段编译
分别编译各段程序，最后使用链接器把各段程序连接成一个完整的可执行程序

声明
告诉编译器这个函数或这个变量在某处可找到，它的模样像什么
定义
在这里建立变量或在这里建立函数，它为名字分配存储空间

单一定义规则
C/C++中，可以在不同的地方声明相同的函数与变量，但只能有一个定义

定义也可以是声明，如果定义int x;之前编译器没有发现标识符x,编译器则把这一标识符看成是声明并立即为它分配空间

函数声明int f(int a,int b); 与 int f(int, int); 等价， 编译器会忽略参数名

void f();在C中表示可带任意参数的函数，在C++中意味着不带参数

变量声明的语法
extern int x; //声明这个变量但不定义它，表示它是在文件以外或文件后面定义的
extern void f(); //也适用于函数

包含头文件
#include <iostream>
#include "main.h"

使用库文件
包含库文件
使用库中的函数与变量
把库链接进可执行程序

输出流输出不同进制的数
cout << dec 
cout << oct
cout << hex 

字符数组拼接
如果两个加引号的字符数组邻接，并且它们之间没有标点，编译器就会把这些字符数组连接成单个字符串
cout << "hello"
        "world" << endl;

调用其它程序
<cstdlib> system()

文件读写
<fstream> 

标准容器类
string vector 等