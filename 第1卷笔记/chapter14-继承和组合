Y对X继承，意味着Y将包含X中的所有数据成员和成员函数，实际上，Y是包含了X的一个子对象

public继承，基类中的公有成员在派生类中依然是公有的

初始化表达式 在派生类的构造函数前调用基类的构造函数
Sub():Base(){ } //如果不提供，会使用基类的默认构造函数
对于内建类型也可以使用

继承中构造函数与析构函数调用顺序
1-14-inheritance.cpp

函数的重定义
1-14-inheritance.cpp

非自动继承的函数
构造函数 析构函数 operator= 

私有继承 默认继承或显示声明private继承
私有继承成员公有化 在派生类的public部分声明它们的名字 using Base::a; using Base::f;

protected成员
对其他用户私有，对子类公开

protected继承
类似private继承, 基类中的public成为派生类的protected成员

向上类型转换
1-14-upcasting.cpp

继承和组合都允许由已存在的类型创建新类型，两者都是在新类型中嵌入已存在的类型的子对象
如果想重用已存在类型作为新类型的内部实现的话，最好用组合
如果想使新的类型和基类的类型相同，应该使用继承